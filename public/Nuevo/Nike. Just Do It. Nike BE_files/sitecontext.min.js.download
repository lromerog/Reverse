(()=>{function p(a){if(a&&a.source&&a.source&&window.parent&&a.source===window.parent)switch(a.data.method){case "ESW_PREFETCH_LWR_RESOURCES":var b=new XMLHttpRequest;b.open("HEAD",`../../?lwc.mode=${l?"dev":"prod"}&lwr.linkHeaders=true`);b.send();break;case "ESW_3RDPARTY_STORAGE_REQUEST":b=window.parent;var c=b.postMessage;a=a.data.data.orgId;var e=null;let f=null;try{e=m(a,localStorage)}catch(d){console.log(`failed to get data for org ${a}, 3rd party localStorage is not available`)}try{f=m(a,sessionStorage)}catch(d){console.log(`failed to get data for org ${a}, 3rd party sessionStorage is not available`)}c.call(b,
{method:"ESW_3RDPARTY_STORAGE_RESPONSE",data:{localStorage:e,sessionStorage:f}},g);break;case "ESW_3RDPARTY_STORAGE_SET_ITEMS":n(a.data.data.orgId,a.data.data.key,a.data.data.value,a.data.data.inLocalStorage);break;case "ESW_3RDPARTY_STORAGE_CLEAR":b=a.data.data;c=`${b}_WEB_STORAGE`;if(g===window.location.origin)console.log(`skip 3rd party clear storage for org ${b}, since 3rd party storage domain is the same as 1st party.`);else{try{localStorage.removeItem(c)}catch(d){console.log(`failed to delete localStorage for org ${b}, 3rd party access is not available`)}try{sessionStorage.removeItem(c)}catch(d){console.log(`failed to delete sessionStorage for org ${b}, 3rd party access is not available`)}}break;
case "ESW_3RDPARTY_STORAGE_SET_OBJECTS":b=a.data.data.orgId;c=a.data.data.localStorageObj;a=a.data.data.sessionStorageObj;e=`${b}_WEB_STORAGE`;if(c)try{localStorage.setItem(e,c)}catch(d){console.log(`failed to set localStorage object for org ${b}, 3rd party access is not available`)}if(a)try{sessionStorage.setItem(e,a)}catch(d){console.log(`failed to set sessionStorage object for org ${b}, 3rd party access is not available`)}break;default:console.error("Unrecognized event name: "+a.data.method)}else console.error("Unexpected message source (message not from parent contentWindow): "+
a.origin)}function m(a,b){return b?(a=`${a}_WEB_STORAGE`,b.getItem(a)&&JSON.parse(b.getItem(a))||{}):null}function n(a,b,c,e){let f=`${a}_WEB_STORAGE`;try{let d=e?localStorage:sessionStorage,h,k=d.getItem(f);k||(k="{}");h=JSON.parse(k);h[b]=c;d.setItem(f,JSON.stringify(h))}catch(d){e?(console.log(`failed to set ${b} in ${f} - localStorage not available`),n(a,b,c,!1)):console.log(`failed to set ${b} in ${f} - sessionStorage not available`)}}let g,l;window.embeddedservice_sessionApi=new function(){const a=
new Proxy(new URLSearchParams(window.location.search),{get:(b,c)=>b.get(c)});window.addEventListener("message",p);g=a.parent_domain;l="true"===a.dev_mode;window.parent.postMessage({method:"ESW_3RDPARTY_STORAGE_READY"},g)}})();
